files:
  - Hjson
  - Java

Hjson: |+2
  ```
  {
    tables: [{
        name: PlayerStatsByYear
        extend: PlayerStats
        description:
        '''
        Player Stats View By year
        '''
        category: Sports
        cardinality : large
        filterTemplate : createdOn>={{start}};createdOn<{{end}}
        isFact : true
        tags: ['Game', 'Player']
        measures : [
            {
            name : lowScore
            type : INTEGER
            definition: 'MIN({{highScore}})'
            }
        ],
        dimensions : [
            {
                name : gameOn
                type : TIME
                definition : '{{game_on}}'
                grain:
                {
                    # Change Type from DAY to YEAR
                    type :  YEAR
                    sql :  '''
                    PARSEDATETIME(FORMATDATETIME({{}}, 'yyyy'), 'yyyy')
                    '''
                }
            }
        ]
    }]
  }
  ```

Java: |+2
  ```java
  // Only Adding New Attribue, can use extends.
  @Include
  @VersionQuery(sql = "SELECT COUNT(*) from playerStats")
  @EqualsAndHashCode
  @ToString
  @TableMeta(description = "A long description", category = "Sports", tags = {"Game", "Player"}, filterTemplate = "createdOn>={{start}};createdOn<{{end}}", size = CardinalitySize.LARGE)
  public class PlayerStatsMinScore extends PlayerStats {

      @MetricFormula("MIN({{highScore}})")
      private long lowScore;
  }

  // Adding New Attribue and changing type of existing column, can not use extends.
  @Include
  @VersionQuery(sql = "SELECT COUNT(*) from playerStats")
  @EqualsAndHashCode
  @ToString
  @TableMeta(description = "A long description", category = "Sports", tags = {"Game", "Player"}, filterTemplate = "createdOn>={{start}};createdOn<{{end}}", size = CardinalitySize.LARGE)
  public class PlayerStatsByYear {

      public static final String DATE_FORMAT = "PARSEDATETIME(FORMATDATETIME({{}}, 'yyyy-MM-dd'), 'yyyy-MM-dd')";
      public static final String YEAR_MONTH_FORMAT = "PARSEDATETIME(FORMATDATETIME({{}}, 'yyyy-MM'), 'yyyy-MM')";
      public static final String YEAR_FORMAT = "PARSEDATETIME(FORMATDATETIME({{}}, 'yyyy'), 'yyyy')";

      @Id
      private String id;

      @MetricFormula("MAX({{highScore}})")
      @ColumnMeta(friendlyName = "High Score")
      private long highScore;

      @ColumnMeta(size = CardinalitySize.LARGE)
      private String name;

      @Join("{{country_id}} = {{playerCountry.id}}", type = JoinType.LEFT)
      private Country playerCountry;

      @DimensionFormula("{{playerCountry.isoCode}}")
      @ColumnMeta(friendlyName = "Country Code")
      private String countryCode;

      @Temporal(grain = @TimeGrainDefinition(grain = TimeGrain.MONTH, expression = YEAR_MONTH_FORMAT), timeZone = "UTC")
      @DimensionFormula("{{updated_on}}")
      private Month updatedOn;

      @Temporal(grain = @TimeGrainDefinition(grain = TimeGrain.DAY, expression = DATE_FORMAT), timeZone = "UTC")
      @DimensionFormula("{{created_on}}")
      private Day createdOn;

      // Change type of gameOn from Day to Year
      @Temporal(grain = @TimeGrainDefinition(grain = TimeGrain.YEAR, expression = YEAR_FORMAT), timeZone = "UTC")
      @DimensionFormula("{{game_on}}")
      private Year gameOn;

      // New Column Added
      @MetricFormula("MIN({{highScore}})")
      private long lowScore;
  }
  ```
